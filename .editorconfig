####################################################################
# Editor configuration file
####################################################################
root = true

[*.{gitattribute,gitignore,editorconfig,cs}]
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true

[*.{cs}]
indent_style = space
indent_size = 4
tab_width = 4
end_of_line = crlf

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = true:warning
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_property = true:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members

# Expression-level preferences
dotnet_style_coalesce_expression = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_object_initializer = true:warning
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_return = true:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_simplified_boolean_expressions = true:warning
dotnet_style_prefer_simplified_interpolation = true

# Field preferences
dotnet_style_readonly_field = true:warning

# Parameter preferences
dotnet_code_quality_unused_parameters = all:warning

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false:warning
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_when_type_is_apparent = true:warning

# Expression-bodied members
csharp_style_expression_bodied_accessors = false:warning
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_indexers = false:warning
csharp_style_expression_bodied_lambdas = true:warning
csharp_style_expression_bodied_local_functions = false:warning
csharp_style_expression_bodied_methods = false:warning
csharp_style_expression_bodied_operators = false:warning
csharp_style_expression_bodied_properties = false:warning

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_not_pattern = true:warning
csharp_style_prefer_pattern_matching = true:warning
csharp_style_prefer_switch_expression = true:warning

# Null-checking preferences
csharp_style_conditional_delegate_call = true:warning

# Modifier preferences
csharp_prefer_static_local_function = true:warning
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = true:warning
csharp_prefer_simple_using_statement = true:warning

# Expression-level preferences
csharp_prefer_simple_default_expression = true:warning
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning
csharp_style_inlined_variable_declaration = true:warning
csharp_style_pattern_local_over_anonymous_function = true:warning
csharp_style_prefer_index_operator = true:warning
csharp_style_prefer_range_operator = true:warning
csharp_style_throw_expression = true:warning
csharp_style_unused_value_assignment_preference = discard_variable:warning
csharp_style_unused_value_expression_statement_preference = discard_variable:warning

# 'using' directive preferences
csharp_using_directive_placement = inside_namespace:warning

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

roslynator.max_line_length = 200

# Analyzers configuration
dotnet_diagnostic.RS1001.severity = warning

# RS1004: Recommend adding language support to diagnostic analyzer.
dotnet_diagnostic.RS1004.severity = warning

# RS1007: Provide localizable arguments to diagnostic descriptor constructor.
dotnet_diagnostic.RS1007.severity = warning

# RS1009: Only internal implementations of this interface are allowed.
dotnet_diagnostic.RS1009.severity = warning

# RS1010: Create code actions should have a unique EquivalenceKey for FixAll occurrences support.
dotnet_diagnostic.RS1010.severity = warning

# RS1011: Use code actions that have a unique EquivalenceKey for FixAll occurrences support.
dotnet_diagnostic.RS1011.severity = warning

# RS1015: Provide non-null 'helpLinkUri' value to diagnostic descriptor constructor.
dotnet_diagnostic.RS1015.severity = warning

# RS1016: Code fix providers should provide FixAll support.
dotnet_diagnostic.RS1016.severity = warning

# RS1017: DiagnosticId for analyzers must be a non-null constant.
dotnet_diagnostic.RS1017.severity = warning

# RS1018: DiagnosticId for analyzers must be in specified format.
dotnet_diagnostic.RS1018.severity = warning

# RS1019: DiagnosticId must be unique across analyzers.
dotnet_diagnostic.RS1019.severity = warning

# RS1020: Category for analyzers must be from the specified values.
dotnet_diagnostic.RS1020.severity = warning

# RS1021: Invalid entry in analyzer category and diagnostic ID range specification file.
dotnet_diagnostic.RS1021.severity = warning

# RS1024: Compare symbols correctly
dotnet_diagnostic.RS1024.severity = warning

# RS1025: Configure generated code analysis
dotnet_diagnostic.RS1025.severity = warning

# RS1026: Enable concurrent execution
dotnet_diagnostic.RS1026.severity = warning

# RS1027: Types marked with DiagnosticAnalyzerAttribute(s) should inherit from DiagnosticAnalyzer.
dotnet_diagnostic.RS1027.severity = warning

# RS1028: Provide non-null 'customTags' value to diagnostic descriptor constructor.
dotnet_diagnostic.RS1028.severity = warning

# RS1029: Do not use reserved diagnostic IDs.
dotnet_diagnostic.RS1029.severity = warning

# RS1030: Do not invoke Compilation.GetSemanticModel() method within a diagnostic analyzer
dotnet_diagnostic.RS1030.severity = warning

# RS2000: Add analyzer diagnostic IDs to analyzer release.
dotnet_diagnostic.RS2000.severity = warning

# RS2001: Ensure up-to-date entry for analyzer diagnostic IDs are added to analyzer release.
dotnet_diagnostic.RS2001.severity = warning

# RS2002: Do not add removed analyzer diagnostic IDs to unshipped analyzer release.
dotnet_diagnostic.RS2002.severity = warning

# RS2003: Shipped diagnostic IDs that are no longer reported should have an entry in the 'Removed Rules' table in unshipped file.
dotnet_diagnostic.RS2003.severity = warning

# RS2004: Diagnostic IDs marked as removed in analyzer release file should not be reported by analyzers.
dotnet_diagnostic.RS2004.severity = warning

# RS2005: Remove duplicate entries for diagnostic ID in the same analyzer release.
dotnet_diagnostic.RS2005.severity = warning

# RS2006: Remove duplicate entries for diagnostic ID between analyzer releases.
dotnet_diagnostic.RS2006.severity = warning

# RS2007: Invalid entry in analyzer release file.
dotnet_diagnostic.RS2007.severity = warning

# RS2008: Enable analyzer release tracking
dotnet_diagnostic.RS2008.severity = warning

# IDE0033: Use explicitly provided tuple name
dotnet_diagnostic.IDE0033.severity = warning

# IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0044.severity = warning

# IDE0070: Use 'System.HashCode'
dotnet_diagnostic.IDE0070.severity = warning

# RS1002: Missing kind argument when registering an analyzer action.
dotnet_diagnostic.RS1002.severity = warning

# RS1003: Unsupported SymbolKind argument when registering a symbol analyzer action.
dotnet_diagnostic.RS1003.severity = warning

# RS1005: ReportDiagnostic invoked with an unsupported DiagnosticDescriptor.
dotnet_diagnostic.RS1005.severity = warning

# RS1006: Invalid type argument for DiagnosticAnalyzer's Register method.
dotnet_diagnostic.RS1006.severity = warning

# RS1008: Avoid storing per-compilation data into the fields of a diagnostic analyzer.
dotnet_diagnostic.RS1008.severity = warning

# RS1012: Start action has no registered actions.
dotnet_diagnostic.RS1012.severity = warning

# RS1013: Start action has no registered non-end actions.
dotnet_diagnostic.RS1013.severity = warning

# RS1014: Do not ignore values returned by methods on immutable objects.
dotnet_diagnostic.RS1014.severity = warning

# RS1022: Do not use types from Workspaces assembly in an analyzer
dotnet_diagnostic.RS1022.severity = warning

# RS1023: Upgrade MSBuildWorkspace
dotnet_diagnostic.RS1023.severity = warning

# IDE0004: Remove Unnecessary Cast
dotnet_diagnostic.IDE0004.severity = warning

# IDE0005: Using directive is unnecessary.
dotnet_diagnostic.IDE0005.severity = warning

# IDE1006: Naming Styles
dotnet_diagnostic.IDE1006.severity = warning

# IDE1005: Delegate invocation can be simplified.
dotnet_diagnostic.IDE1005.severity = warning

# IDE0063: Use simple 'using' statement
dotnet_diagnostic.IDE0063.severity = warning

# IDE0064: Make readonly fields writable
dotnet_diagnostic.IDE0064.severity = warning

# IDE0065: Misplaced using directive
dotnet_diagnostic.IDE0065.severity = warning

# IDE0066: Convert switch statement to expression
dotnet_diagnostic.IDE0066.severity = warning

# IDE0071: Simplify interpolation
dotnet_diagnostic.IDE0071.severity = warning

# IDE0072: Add missing cases
dotnet_diagnostic.IDE0072.severity = warning

# IDE0073: The file header is missing or not located at the top of the file
dotnet_diagnostic.IDE0073.severity = warning

# IDE0074: Use compound assignment
dotnet_diagnostic.IDE0074.severity = warning

# IDE0075: Simplify conditional expression
dotnet_diagnostic.IDE0075.severity = warning

# IDE0076: Invalid global 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0076.severity = warning

# IDE0077: Avoid legacy format target in 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0077.severity = warning

# IDE0078: Use pattern matching
dotnet_diagnostic.IDE0078.severity = warning

# IDE0080: Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = warning

# IDE0082: 'typeof' can be converted  to 'nameof'
dotnet_diagnostic.IDE0082.severity = warning

# IDE0083: Use pattern matching
dotnet_diagnostic.IDE0083.severity = warning

# IDE0062: Make local function 'static'
dotnet_diagnostic.IDE0062.severity = warning

# IDE0040: Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = warning

# IDE0041: Use 'is null' check
dotnet_diagnostic.IDE0041.severity = warning

# IDE0042: Deconstruct variable declaration
dotnet_diagnostic.IDE0042.severity = warning

# IDE0043: Invalid format string
dotnet_diagnostic.IDE0043.severity = warning

# IDE0045: Convert to conditional expression
dotnet_diagnostic.IDE0045.severity = warning

# IDE0046: Convert to conditional expression
dotnet_diagnostic.IDE0046.severity = warning

# IDE0047: Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = warning

# IDE0048: Add parentheses for clarity
dotnet_diagnostic.IDE0048.severity = warning

# IDE0050: Convert to tuple
dotnet_diagnostic.IDE0050.severity = warning

# IDE0051: Remove unused private members
dotnet_diagnostic.IDE0051.severity = warning

# IDE0052: Remove unread private members
dotnet_diagnostic.IDE0052.severity = warning

# IDE0054: Use compound assignment
dotnet_diagnostic.IDE0054.severity = warning

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = warning

# IDE0056: Use index operator
dotnet_diagnostic.IDE0056.severity = warning

# IDE0057: Use range operator
dotnet_diagnostic.IDE0057.severity = warning

# IDE0058: Expression value is never used
dotnet_diagnostic.IDE0058.severity = warning

# IDE0059: Unnecessary assignment of a value
dotnet_diagnostic.IDE0059.severity = warning

# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = warning

# IDE0061: Use expression body for local functions
dotnet_diagnostic.IDE0061.severity = warning

# IDE0039: Use local function
dotnet_diagnostic.IDE0039.severity = warning

# IDE0037: Use inferred member name
dotnet_diagnostic.IDE0037.severity = warning

# IDE0036: Order modifiers
dotnet_diagnostic.IDE0036.severity = warning

# IDE0034: Simplify 'default' expression
dotnet_diagnostic.IDE0034.severity = warning

# IDE0019: Use pattern matching
dotnet_diagnostic.IDE0019.severity = warning

# IDE0020: Use pattern matching
dotnet_diagnostic.IDE0020.severity = warning

# IDE0021: Use expression body for constructors
dotnet_diagnostic.IDE0021.severity = warning

# IDE0022: Use expression body for methods
dotnet_diagnostic.IDE0022.severity = warning

# IDE0023: Use expression body for operators
dotnet_diagnostic.IDE0023.severity = warning

# IDE0024: Use expression body for operators
dotnet_diagnostic.IDE0024.severity = warning

# IDE0025: Use expression body for properties
dotnet_diagnostic.IDE0025.severity = warning

# IDE0026: Use expression body for indexers
dotnet_diagnostic.IDE0026.severity = warning

# IDE0027: Use expression body for accessors
dotnet_diagnostic.IDE0027.severity = warning

# IDE0028: Simplify collection initialization
dotnet_diagnostic.IDE0028.severity = warning

# IDE0029: Use coalesce expression
dotnet_diagnostic.IDE0029.severity = warning

# IDE0030: Use coalesce expression
dotnet_diagnostic.IDE0030.severity = warning

# IDE0031: Use null propagation
dotnet_diagnostic.IDE0031.severity = warning

# IDE0032: Use auto property
dotnet_diagnostic.IDE0032.severity = warning

# IDE0007: Use implicit type
dotnet_diagnostic.IDE0007.severity = warning

# IDE0008: Use explicit type
dotnet_diagnostic.IDE0008.severity = warning

# IDE0009: Member access should be qualified.
dotnet_diagnostic.IDE0009.severity = warning

# IDE0010: Add missing cases
dotnet_diagnostic.IDE0010.severity = warning

# IDE0011: Add braces
dotnet_diagnostic.IDE0011.severity = warning

# IDE0016: Use 'throw' expression
dotnet_diagnostic.IDE0016.severity = warning

# IDE0017: Simplify object initialization
dotnet_diagnostic.IDE0017.severity = warning

# IDE0018: Inline variable declaration
dotnet_diagnostic.IDE0018.severity = warning

# CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = warning

# CA1019: Define accessors for attribute arguments
dotnet_diagnostic.CA1019.severity = warning

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = warning

# CA1065: Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = warning

# CA1200: Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = warning

# CA1309: Use ordinal string comparison
dotnet_diagnostic.CA1309.severity = warning

# CA1507: Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = warning

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = warning

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = warning

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = warning

# CA2016: Forward the 'CancellationToken' parameter to methods that take one
dotnet_diagnostic.CA2016.severity = warning

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = warning

# CA2234: Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = warning

# CA3076: Insecure XSLT script processing.
dotnet_diagnostic.CA3076.severity = warning

# CA3077: Insecure Processing in API Design, XmlDocument and XmlTextReader
dotnet_diagnostic.CA3077.severity = warning

# CA1000: Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = warning

# CA1002: Do not expose generic lists
dotnet_diagnostic.CA1002.severity = warning

# CA1003: Use generic event handler instances
dotnet_diagnostic.CA1003.severity = warning

# CA1005: Avoid excessive parameters on generic types
dotnet_diagnostic.CA1005.severity = warning

# CA1008: Enums should have zero value
dotnet_diagnostic.CA1008.severity = warning

# CA1010: Generic interface should also be implemented
dotnet_diagnostic.CA1010.severity = warning

# CA1012: Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = warning

# CA1014: Mark assemblies with CLSCompliant
dotnet_diagnostic.CA1014.severity = warning

# CA1016: Mark assemblies with assembly version
dotnet_diagnostic.CA1016.severity = warning

# CA1017: Mark assemblies with ComVisible
dotnet_diagnostic.CA1017.severity = warning

# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = warning

# CA1021: Avoid out parameters
dotnet_diagnostic.CA1021.severity = warning

# CA1024: Use properties where appropriate
dotnet_diagnostic.CA1024.severity = warning

# CA1027: Mark enums with FlagsAttribute
dotnet_diagnostic.CA1027.severity = warning

# CA1028: Enum Storage should be Int32
dotnet_diagnostic.CA1028.severity = warning

# CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity = warning

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = warning

# CA1033: Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = warning

# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = warning

# CA1036: Override methods on comparable types
dotnet_diagnostic.CA1036.severity = warning

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = warning

# CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = warning

# CA1043: Use Integral Or String Argument For Indexers
dotnet_diagnostic.CA1043.severity = warning

# CA1044: Properties should not be write only
dotnet_diagnostic.CA1044.severity = warning

# CA1045: Do not pass types by reference
dotnet_diagnostic.CA1045.severity = warning

# CA1046: Do not overload equality operator on reference types
dotnet_diagnostic.CA1046.severity = warning

# CA1050: Declare types in namespaces
dotnet_diagnostic.CA1050.severity = warning

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = warning

# CA1052: Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = warning

# CA1054: URI-like parameters should not be strings
dotnet_diagnostic.CA1054.severity = warning

# CA1055: URI-like return values should not be strings
dotnet_diagnostic.CA1055.severity = warning

# CA1056: URI-like properties should not be strings
dotnet_diagnostic.CA1056.severity = warning

# CA1058: Types should not extend certain base types
dotnet_diagnostic.CA1058.severity = warning

# CA1060: Move pinvokes to native methods class
dotnet_diagnostic.CA1060.severity = warning

# CA1061: Do not hide base class methods
dotnet_diagnostic.CA1061.severity = warning

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = warning

# CA1063: Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = warning

# CA1064: Exceptions should be public
dotnet_diagnostic.CA1064.severity = warning

# CA1066: Implement IEquatable when overriding Object.Equals
dotnet_diagnostic.CA1066.severity = warning

# CA1067: Override Object.Equals(object) when implementing IEquatable<T>
dotnet_diagnostic.CA1067.severity = warning

# CA1068: CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = warning

# CA1069: Enums values should not be duplicated
dotnet_diagnostic.CA1069.severity = warning

# CA1070: Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = warning

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = warning

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = warning

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = warning

# CA1307: Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = warning

# CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = warning

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = warning

# CA1401: P/Invokes should not be visible
dotnet_diagnostic.CA1401.severity = warning

# CA1416: Validate platform compatibility
dotnet_diagnostic.CA1416.severity = warning

# CA1417: Do not use 'OutAttribute' on string parameters for P/Invokes
dotnet_diagnostic.CA1417.severity = warning

# CA1501: Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = warning

# CA1502: Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = warning

# CA1505: Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = warning

# CA1506: Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = warning

# CA1508: Avoid dead conditional code
dotnet_diagnostic.CA1508.severity = warning

# CA1509: Invalid entry in code metrics rule specification file
dotnet_diagnostic.CA1509.severity = warning

# CA1700: Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = warning

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = warning

# CA1708: Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = warning

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = warning

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = warning

# CA1712: Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = warning

# CA1713: Events should not have 'Before' or 'After' prefix
dotnet_diagnostic.CA1713.severity = warning

# CA1715: Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = warning

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = warning

# CA1720: Identifier contains type name
dotnet_diagnostic.CA1720.severity = warning

# CA1721: Property names should not match get methods
dotnet_diagnostic.CA1721.severity = warning

# CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = warning

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = warning

# CA1801: Review unused parameters
dotnet_diagnostic.CA1801.severity = warning

# CA1802: Use literals where appropriate
dotnet_diagnostic.CA1802.severity = warning

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = warning

# CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = warning

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = warning

# CA1813: Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = warning

# CA1814: Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = warning

# CA1815: Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = warning

# CA1816: Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = warning

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = warning

# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = warning

# CA1821: Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = warning

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = warning

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = warning

# CA1826: Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity = warning

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = warning

# CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = warning

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = warning

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = warning

# CA1831: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1831.severity = warning

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1832.severity = warning

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1833.severity = warning

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = warning

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = warning

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = warning

# CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.CA1837.severity = warning

# CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = warning

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = warning

# CA2002: Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = warning

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = warning

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = warning

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = warning

# CA2011: Avoid infinite recursion
dotnet_diagnostic.CA2011.severity = warning

# CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = warning

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = warning

# CA2014: Do not use stackalloc in loops
dotnet_diagnostic.CA2014.severity = warning

# CA2015: Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = warning

# CA2100: Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = warning

# CA2101: Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2101.severity = warning

# CA2109: Review visible event handlers
dotnet_diagnostic.CA2109.severity = warning

# CA2119: Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2119.severity = warning

# CA2153: Do Not Catch Corrupted State Exceptions
dotnet_diagnostic.CA2153.severity = warning

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = warning

# CA2207: Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = warning

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = warning

# CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = warning

# CA2213: Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = warning

# CA2214: Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = warning

# CA2215: Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = warning

# CA2216: Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = warning

# CA2217: Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = warning

# CA2219: Do not raise exceptions in finally clauses
dotnet_diagnostic.CA2219.severity = warning

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = warning

# CA2226: Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = warning

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = warning

# CA2229: Implement serialization constructors
dotnet_diagnostic.CA2229.severity = warning

# CA2231: Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2231.severity = warning

# CA2235: Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = warning

# CA2237: Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = warning

# CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = warning

# CA2242: Test for NaN correctly
dotnet_diagnostic.CA2242.severity = warning

# CA2243: Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = warning

# CA2244: Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = warning

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = warning

# CA2246: Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = warning

# CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.CA2247.severity = warning

# CA2248: Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.CA2248.severity = warning

# CA2249: Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2249.severity = warning

# CA2300: Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2300.severity = warning

# CA2301: Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2301.severity = warning

# CA2302: Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2302.severity = warning

# CA2305: Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2305.severity = warning

# CA2310: Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2310.severity = warning

# CA2311: Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2311.severity = warning

# CA2312: Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2312.severity = warning

# CA2315: Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2315.severity = warning

# CA2321: Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2321.severity = warning

# CA2322: Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2322.severity = warning

# CA2326: Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2326.severity = warning

# CA2327: Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2327.severity = warning

# CA2328: Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2328.severity = warning

# CA2329: Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2329.severity = warning

# CA2330: Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2330.severity = warning

# CA2350: Do not use DataTable.ReadXml() with untrusted data
dotnet_diagnostic.CA2350.severity = warning

# CA2351: Do not use DataSet.ReadXml() with untrusted data
dotnet_diagnostic.CA2351.severity = warning

# CA2352: Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2352.severity = warning

# CA2353: Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.CA2353.severity = warning

# CA2354: Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2354.severity = warning

# CA2355: Unsafe DataSet or DataTable type found in deserializable object graph
dotnet_diagnostic.CA2355.severity = warning

# CA2356: Unsafe DataSet or DataTable type in web deserializable object graph
dotnet_diagnostic.CA2356.severity = warning

# CA2361: Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.CA2361.severity = warning

# CA2362: Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2362.severity = warning

# CA3001: Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3001.severity = warning

# CA3002: Review code for XSS vulnerabilities
dotnet_diagnostic.CA3002.severity = warning

# CA3003: Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3003.severity = warning

# CA3004: Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3004.severity = warning

# CA3005: Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3005.severity = warning

# CA3006: Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3006.severity = warning

# CA3007: Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3007.severity = warning

# CA3008: Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3008.severity = warning

# CA3009: Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3009.severity = warning

# CA3010: Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = warning

# CA3011: Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3011.severity = warning

# CA3012: Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3012.severity = warning

# CA3061: Do Not Add Schema By URL
dotnet_diagnostic.CA3061.severity = warning

# CA3075: Insecure DTD processing in XML
dotnet_diagnostic.CA3075.severity = warning

# CA3147: Mark Verb Handlers With Validate Antiforgery Token
dotnet_diagnostic.CA3147.severity = warning

# CA5350: Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = warning

# CA5351: Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = warning

# CA5358: Review cipher mode usage with cryptography experts
dotnet_diagnostic.CA5358.severity = warning

# CA5359: Do Not Disable Certificate Validation
dotnet_diagnostic.CA5359.severity = warning

# CA5360: Do Not Call Dangerous Methods In Deserialization
dotnet_diagnostic.CA5360.severity = warning

# CA5361: Do Not Disable SChannel Use of Strong Crypto
dotnet_diagnostic.CA5361.severity = warning

# CA5362: Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5362.severity = warning

# CA5363: Do Not Disable Request Validation
dotnet_diagnostic.CA5363.severity = warning

# CA5364: Do Not Use Deprecated Security Protocols
dotnet_diagnostic.CA5364.severity = warning

# CA5365: Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5365.severity = warning

# CA5366: Use XmlReader For DataSet Read Xml
dotnet_diagnostic.CA5366.severity = warning

# CA5367: Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5367.severity = warning

# CA5368: Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5368.severity = warning

# CA5369: Use XmlReader For Deserialize
dotnet_diagnostic.CA5369.severity = warning

# CA5370: Use XmlReader For Validating Reader
dotnet_diagnostic.CA5370.severity = warning

# CA5371: Use XmlReader For Schema Read
dotnet_diagnostic.CA5371.severity = warning

# CA5372: Use XmlReader For XPathDocument
dotnet_diagnostic.CA5372.severity = warning

# CA5373: Do not use obsolete key derivation function
dotnet_diagnostic.CA5373.severity = warning

# CA5374: Do Not Use XslTransform
dotnet_diagnostic.CA5374.severity = warning

# CA5375: Do Not Use Account Shared Access Signature
dotnet_diagnostic.CA5375.severity = warning

# CA5376: Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5376.severity = warning

# CA5377: Use Container Level Access Policy
dotnet_diagnostic.CA5377.severity = warning

# CA5378: Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5378.severity = warning

# CA5379: Do Not Use Weak Key Derivation Function Algorithm
dotnet_diagnostic.CA5379.severity = warning

# CA5380: Do Not Add Certificates To Root Store
dotnet_diagnostic.CA5380.severity = warning

# CA5381: Ensure Certificates Are Not Added To Root Store
dotnet_diagnostic.CA5381.severity = warning

# CA5382: Use Secure Cookies In ASP.Net Core
dotnet_diagnostic.CA5382.severity = warning

# CA5383: Ensure Use Secure Cookies In ASP.Net Core
dotnet_diagnostic.CA5383.severity = warning

# CA5384: Do Not Use Digital Signature Algorithm (DSA)
dotnet_diagnostic.CA5384.severity = warning

# CA5385: Use Rivest–Shamir–Adleman (RSA) Algorithm With Sufficient Key Size
dotnet_diagnostic.CA5385.severity = warning

# CA5386: Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5386.severity = warning

# CA5387: Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
dotnet_diagnostic.CA5387.severity = warning

# CA5388: Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
dotnet_diagnostic.CA5388.severity = warning

# CA5389: Do Not Add Archive Item's Path To The Target File System Path
dotnet_diagnostic.CA5389.severity = warning

# CA5390: Do not hard-code encryption key
dotnet_diagnostic.CA5390.severity = warning

# CA5391: Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5391.severity = warning

# CA5392: Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5392.severity = warning

# CA5393: Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5393.severity = warning

# CA5394: Do not use insecure randomness
dotnet_diagnostic.CA5394.severity = warning

# CA5395: Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5395.severity = warning

# CA5396: Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5396.severity = warning

# CA5397: Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5397.severity = warning

# CA5398: Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5398.severity = warning

# CA5399: HttpClients should enable certificate revocation list checks
dotnet_diagnostic.CA5399.severity = warning

# CA5400: Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5400.severity = warning

# CA5401: Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5401.severity = warning

# CA5402: Use CreateEncryptor with the default IV 
dotnet_diagnostic.CA5402.severity = warning

# CA5403: Do not hard-code certificate
dotnet_diagnostic.CA5403.severity = warning

# IL3000: Avoid using accessing Assembly file path when publishing as a single-file
dotnet_diagnostic.IL3000.severity = warning

# IL3001: Avoid using accessing Assembly file path when publishing as a single-file
dotnet_diagnostic.IL3001.severity = warning

# RCS9001: Use pattern matching.
dotnet_diagnostic.RCS9001.severity = warning

# RCS9002: Use property SyntaxNode.SpanStart.
dotnet_diagnostic.RCS9002.severity = warning

# RCS9003: Unnecessary conditional access.
dotnet_diagnostic.RCS9003.severity = warning

# RCS9004: Call 'Any' instead of accessing 'Count'.
dotnet_diagnostic.RCS9004.severity = warning

# RCS9005: Unnecessary null check.
dotnet_diagnostic.RCS9005.severity = warning

# RCS9006: Use element access.
dotnet_diagnostic.RCS9006.severity = warning

# RCS9007: Use return value.
dotnet_diagnostic.RCS9007.severity = warning

# RCS9008: Call 'Last' instead of using [].
dotnet_diagnostic.RCS9008.severity = warning

# RCS9009: Unknown language name.
dotnet_diagnostic.RCS9009.severity = warning

# RCS9010: Specify ExportCodeRefactoringProviderAttribute.Name.
dotnet_diagnostic.RCS9010.severity = warning

# RCS9011: Specify ExportCodeFixProviderAttribute.Name.
dotnet_diagnostic.RCS9011.severity = warning

# RCS1001: Add braces (when expression spans over multiple lines).
dotnet_diagnostic.RCS1001.severity = warning

# RCS1002: Remove braces.
dotnet_diagnostic.RCS1002.severity = warning

# RCS1003: Add braces to if-else (when expression spans over multiple lines).
dotnet_diagnostic.RCS1003.severity = warning

# RCS1004: Remove braces from if-else.
dotnet_diagnostic.RCS1004.severity = warning

# RCS1005: Simplify nested using statement.
dotnet_diagnostic.RCS1005.severity = warning

# RCS1006: Merge 'else' with nested 'if'.
dotnet_diagnostic.RCS1006.severity = warning

# RCS1007: Add braces.
dotnet_diagnostic.RCS1007.severity = warning

# RCS1008: Use explicit type instead of 'var' (when the type is not obvious).
dotnet_diagnostic.RCS1008.severity = none

# RCS1009: Use explicit type instead of 'var' (foreach variable).
dotnet_diagnostic.RCS1009.severity = warning

# RCS1010: Use 'var' instead of explicit type (when the type is obvious).
dotnet_diagnostic.RCS1010.severity = warning

# RCS1012: Use explicit type instead of 'var' (when the type is obvious).
dotnet_diagnostic.RCS1012.severity = none

# RCS1013: Use predefined type.
dotnet_diagnostic.RCS1013.severity = warning

# RCS1014: Use explicitly typed array (or vice versa).
dotnet_diagnostic.RCS1014.severity = warning

# RCS1014a: Use implicitly typed array (when type is obvious).
dotnet_diagnostic.RCS1014a.severity = warning

# RCS1014i: Use implicitly typed array.
dotnet_diagnostic.RCS1014i.severity = warning

# RCS1015: Use nameof operator.
dotnet_diagnostic.RCS1015.severity = warning

# RCS1016: Convert block body to expression-body (or vice versa).
dotnet_diagnostic.RCS1016.severity = warning

# RCS1016a: Convert expression-body to block body when expression is multi-line.
dotnet_diagnostic.RCS1016a.severity = warning

# RCS1016b: Convert expression-body to block body when declaration is multi-line.
dotnet_diagnostic.RCS1016b.severity = warning

# RCS1018: Add accessibility modifiers (or vice versa).
dotnet_diagnostic.RCS1018.severity = warning

# RCS1018i: Remove accessibility modifiers.
dotnet_diagnostic.RCS1018i.severity = warning

# RCS1019: Order modifiers.
dotnet_diagnostic.RCS1019.severity = none

# RCS1020: Simplify Nullable<T> to T?.
dotnet_diagnostic.RCS1020.severity = warning

# RCS1021: Convert lambda expression body to expression-body.
dotnet_diagnostic.RCS1021.severity = warning

# RCS1031: Remove unnecessary braces.
dotnet_diagnostic.RCS1031.severity = warning

# RCS1032: Remove redundant parentheses.
dotnet_diagnostic.RCS1032.severity = warning

# RCS1033: Remove redundant boolean literal.
dotnet_diagnostic.RCS1033.severity = warning

# RCS1034: Remove redundant 'sealed' modifier.
dotnet_diagnostic.RCS1034.severity = warning

# RCS1035: Remove redundant comma in initializer.
dotnet_diagnostic.RCS1035.severity = warning

# RCS1036: Remove redundant empty line.
dotnet_diagnostic.RCS1036.severity = warning

# RCS1036a: Remove empty line between closing brace and switch section.
dotnet_diagnostic.RCS1036a.severity = warning

# RCS1037: Remove trailing white-space.
dotnet_diagnostic.RCS1037.severity = warning

# RCS1038: Remove empty statement.
dotnet_diagnostic.RCS1038.severity = warning

# RCS1039: Remove argument list from attribute.
dotnet_diagnostic.RCS1039.severity = warning

# RCS1040: Remove empty 'else' clause.
dotnet_diagnostic.RCS1040.severity = warning

# RCS1041: Remove empty initializer.
dotnet_diagnostic.RCS1041.severity = warning

# RCS1042: Remove enum default underlying type.
dotnet_diagnostic.RCS1042.severity = warning

# RCS1043: Remove 'partial' modifier from type with a single part.
dotnet_diagnostic.RCS1043.severity = warning

# RCS1044: Remove original exception from throw statement.
dotnet_diagnostic.RCS1044.severity = warning

# RCS1045: Rename private field to camel case with underscore.
dotnet_diagnostic.RCS1045.severity = none

# RCS1045a: Do not rename private static read-only field to camel case with underscore.
dotnet_diagnostic.RCS1045a.severity = warning

# RCS1046: Asynchronous method name should end with 'Async'.
dotnet_diagnostic.RCS1046.severity = warning

# RCS1047: Non-asynchronous method name should not end with 'Async'.
dotnet_diagnostic.RCS1047.severity = warning

# RCS1048: Use lambda expression instead of anonymous method.
dotnet_diagnostic.RCS1048.severity = warning

# RCS1049: Simplify boolean comparison.
dotnet_diagnostic.RCS1049.severity = warning

# RCS1050: Add argument list to object creation expression (or vice versa).
dotnet_diagnostic.RCS1050.severity = warning

# RCS1050i: Remove argument list from object creation expression.
dotnet_diagnostic.RCS1050i.severity = warning

# RCS1051: Parenthesize condition of conditional expression.
dotnet_diagnostic.RCS1051.severity = none

# RCS1051a: Remove parentheses from condition of conditional expression (when condition is a single token).
dotnet_diagnostic.RCS1051a.severity = none

# RCS1052: Declare each attribute separately.
dotnet_diagnostic.RCS1052.severity = warning

# RCS1055: Avoid semicolon at the end of declaration.
dotnet_diagnostic.RCS1055.severity = warning

# RCS1056: Avoid usage of using alias directive.
dotnet_diagnostic.RCS1056.severity = warning

# RCS1058: Use compound assignment.
dotnet_diagnostic.RCS1058.severity = warning

# RCS1059: Avoid locking on publicly accessible instance.
dotnet_diagnostic.RCS1059.severity = warning

# RCS1060: Declare each type in separate file.
dotnet_diagnostic.RCS1060.severity = warning

# RCS1061: Merge 'if' with nested 'if'.
dotnet_diagnostic.RCS1061.severity = warning

# RCS1063: Avoid usage of do statement to create an infinite loop.
dotnet_diagnostic.RCS1063.severity = warning

# RCS1064: Avoid usage of for statement to create an infinite loop.
dotnet_diagnostic.RCS1064.severity = warning

# RCS1065: Avoid usage of while statement to create an inifinite loop.
dotnet_diagnostic.RCS1065.severity = warning

# RCS1066: Remove empty 'finally' clause.
dotnet_diagnostic.RCS1066.severity = warning

# RCS1068: Simplify logical negation.
dotnet_diagnostic.RCS1068.severity = warning

# RCS1069: Remove unnecessary case label.
dotnet_diagnostic.RCS1069.severity = warning

# RCS1070: Remove redundant default switch section.
dotnet_diagnostic.RCS1070.severity = warning

# RCS1071: Remove redundant base constructor call.
dotnet_diagnostic.RCS1071.severity = warning

# RCS1072: Remove empty namespace declaration.
dotnet_diagnostic.RCS1072.severity = warning

# RCS1073: Convert 'if' to 'return' statement.
dotnet_diagnostic.RCS1073.severity = warning

# RCS1074: Remove redundant constructor.
dotnet_diagnostic.RCS1074.severity = warning

# RCS1075: Avoid empty catch clause that catches System.Exception.
dotnet_diagnostic.RCS1075.severity = warning

# RCS1077: Optimize LINQ method call.
dotnet_diagnostic.RCS1077.severity = warning

# RCS1078: Use "" instead of string.Empty (or vice versa).
dotnet_diagnostic.RCS1078.severity = none

# RCS1078i: Use string.Empty instead of "".
dotnet_diagnostic.RCS1078i.severity = warning

# RCS1079: Throwing of new NotImplementedException.
dotnet_diagnostic.RCS1079.severity = warning

# RCS1080: Use 'Count/Length' property instead of 'Any' method.
dotnet_diagnostic.RCS1080.severity = warning

# RCS1081: Split variable declaration.
dotnet_diagnostic.RCS1081.severity = warning

# RCS1084: Use coalesce expression instead of conditional expression.
dotnet_diagnostic.RCS1084.severity = warning

# RCS1085: Use auto-implemented property.
dotnet_diagnostic.RCS1085.severity = warning

# RCS1089: Use --/++ operator instead of assignment.
dotnet_diagnostic.RCS1089.severity = warning

# RCS1090: Add call to 'ConfigureAwait' (or vice versa).
dotnet_diagnostic.RCS1090.severity = warning

# RCS1090i: Remove call to 'ConfigureAwait'.
dotnet_diagnostic.RCS1090i.severity = warning

# RCS1091: Remove empty region.
dotnet_diagnostic.RCS1091.severity = warning

# RCS1093: Remove file with no code.
dotnet_diagnostic.RCS1093.severity = warning

# RCS1094: Declare using directive on top level.
dotnet_diagnostic.RCS1094.severity = none

# RCS1096: Convert 'HasFlag' call to bitwise operation (or vice versa).
dotnet_diagnostic.RCS1096.severity = warning

# RCS1096i: Convert bitwise operation to 'HasFlag' call.
dotnet_diagnostic.RCS1096i.severity = warning

# RCS1097: Remove redundant 'ToString' call.
dotnet_diagnostic.RCS1097.severity = warning

# RCS1098: Constant values should be placed on right side of comparisons.
dotnet_diagnostic.RCS1098.severity = warning

# RCS1099: Default label should be the last label in a switch section.
dotnet_diagnostic.RCS1099.severity = warning

# RCS1100: Format documentation summary on a single line.
dotnet_diagnostic.RCS1100.severity = none

# RCS1101: Format documentation summary on multiple lines.
dotnet_diagnostic.RCS1101.severity = warning

# RCS1102: Make class static.
dotnet_diagnostic.RCS1102.severity = warning

# RCS1103: Convert 'if' to assignment.
dotnet_diagnostic.RCS1103.severity = warning

# RCS1104: Simplify conditional expression.
dotnet_diagnostic.RCS1104.severity = warning

# RCS1104a: Simplify conditional expression (when it includes negation of condition).
dotnet_diagnostic.RCS1104a.severity = warning

# RCS1105: Unncessary interpolation.
dotnet_diagnostic.RCS1105.severity = warning

# RCS1106: Remove empty destructor.
dotnet_diagnostic.RCS1106.severity = warning

# RCS1107: Remove redundant 'ToCharArray' call.
dotnet_diagnostic.RCS1107.severity = warning

# RCS1108: Add 'static' modifier to all partial class declarations.
dotnet_diagnostic.RCS1108.severity = warning

# RCS1110: Declare type inside namespace.
dotnet_diagnostic.RCS1110.severity = warning

# RCS1111: Add braces to switch section with multiple statements.
dotnet_diagnostic.RCS1111.severity = warning

# RCS1112: Combine 'Enumerable.Where' method chain.
dotnet_diagnostic.RCS1112.severity = warning

# RCS1113: Use 'string.IsNullOrEmpty' method.
dotnet_diagnostic.RCS1113.severity = warning

# RCS1114: Remove redundant delegate creation.
dotnet_diagnostic.RCS1114.severity = warning

# RCS1118: Mark local variable as const.
dotnet_diagnostic.RCS1118.severity = warning

# RCS1123: Add parentheses when necessary.
dotnet_diagnostic.RCS1123.severity = warning

# RCS1124: Inline local variable.
dotnet_diagnostic.RCS1124.severity = warning

# RCS1126: Add braces to if-else.
dotnet_diagnostic.RCS1126.severity = warning

# RCS1128: Use coalesce expression.
dotnet_diagnostic.RCS1128.severity = warning

# RCS1129: Remove redundant field initalization.
dotnet_diagnostic.RCS1129.severity = warning

# RCS1130: Bitwise operation on enum without Flags attribute.
dotnet_diagnostic.RCS1130.severity = warning

# RCS1132: Remove redundant overriding member.
dotnet_diagnostic.RCS1132.severity = warning

# RCS1133: Remove redundant Dispose/Close call.
dotnet_diagnostic.RCS1133.severity = warning

# RCS1134: Remove redundant statement.
dotnet_diagnostic.RCS1134.severity = warning

# RCS1135: Declare enum member with zero value (when enum has FlagsAttribute).
dotnet_diagnostic.RCS1135.severity = warning

# RCS1136: Merge switch sections with equivalent content.
dotnet_diagnostic.RCS1136.severity = warning

# RCS1138: Add summary to documentation comment.
dotnet_diagnostic.RCS1138.severity = warning

# RCS1139: Add summary element to documentation comment.
dotnet_diagnostic.RCS1139.severity = warning

# RCS1140: Add exception to documentation comment.
dotnet_diagnostic.RCS1140.severity = warning

# RCS1141: Add 'param' element to documentation comment.
dotnet_diagnostic.RCS1141.severity = warning

# RCS1142: Add 'typeparam' element to documentation comment.
dotnet_diagnostic.RCS1142.severity = warning

# RCS1143: Simplify coalesce expression.
dotnet_diagnostic.RCS1143.severity = warning

# RCS1145: Remove redundant 'as' operator.
dotnet_diagnostic.RCS1145.severity = warning

# RCS1146: Use conditional access.
dotnet_diagnostic.RCS1146.severity = warning

# RCS1151: Remove redundant cast.
dotnet_diagnostic.RCS1151.severity = warning

# RCS1154: Sort enum members.
dotnet_diagnostic.RCS1154.severity = warning

# RCS1155: Use StringComparison when comparing strings.
dotnet_diagnostic.RCS1155.severity = warning

# RCS1156: Use string.Length instead of comparison with empty string.
dotnet_diagnostic.RCS1156.severity = warning

# RCS1157: Composite enum value contains undefined flag.
dotnet_diagnostic.RCS1157.severity = warning

# RCS1158: Static member in generic type should use a type parameter.
dotnet_diagnostic.RCS1158.severity = warning

# RCS1159: Use EventHandler<T>.
dotnet_diagnostic.RCS1159.severity = warning

# RCS1160: Abstract type should not have public constructors.
dotnet_diagnostic.RCS1160.severity = warning

# RCS1161: Enum should declare explicit values.
dotnet_diagnostic.RCS1161.severity = warning

# RCS1162: Avoid chain of assignments.
dotnet_diagnostic.RCS1162.severity = warning

# RCS1163: Unused parameter.
dotnet_diagnostic.RCS1163.severity = none

# RCS1164: Unused type parameter.
dotnet_diagnostic.RCS1164.severity = warning

# RCS1165: Unconstrained type parameter checked for null.
dotnet_diagnostic.RCS1165.severity = warning

# RCS1166: Value type object is never equal to null.
dotnet_diagnostic.RCS1166.severity = warning

# RCS1168: Parameter name differs from base name.
dotnet_diagnostic.RCS1168.severity = warning

# RCS1169: Make field read-only.
dotnet_diagnostic.RCS1169.severity = warning

# RCS1170: Use read-only auto-implemented property.
dotnet_diagnostic.RCS1170.severity = warning

# RCS1171: Simplify lazy initialization.
dotnet_diagnostic.RCS1171.severity = warning

# RCS1172: Use 'is' operator instead of 'as' operator.
dotnet_diagnostic.RCS1172.severity = warning

# RCS1173: Use coalesce expression instead of 'if'.
dotnet_diagnostic.RCS1173.severity = warning

# RCS1174: Remove redundant async/await.
dotnet_diagnostic.RCS1174.severity = warning

# RCS1175: Unused this parameter.
dotnet_diagnostic.RCS1175.severity = warning

# RCS1176: Use 'var' instead of explicit type (when the type is not obvious).
dotnet_diagnostic.RCS1176.severity = none

# RCS1177: Use 'var' instead of explicit type (in foreach).
dotnet_diagnostic.RCS1177.severity = none

# RCS1179: Unnecessary assignment.
dotnet_diagnostic.RCS1179.severity = warning

# RCS1180: Inline lazy initialization.
dotnet_diagnostic.RCS1180.severity = warning

# RCS1181: Convert comment to documentation comment.
dotnet_diagnostic.RCS1181.severity = warning

# RCS1182: Remove redundant base interface.
dotnet_diagnostic.RCS1182.severity = warning

# RCS1186: Use Regex instance instead of static method.
dotnet_diagnostic.RCS1186.severity = warning

# RCS1187: Use constant instead of field.
dotnet_diagnostic.RCS1187.severity = warning

# RCS1188: Remove redundant auto-property initialization.
dotnet_diagnostic.RCS1188.severity = warning

# RCS1189: Add or remove region name.
dotnet_diagnostic.RCS1189.severity = warning

# RCS1190: Join string expressions.
dotnet_diagnostic.RCS1190.severity = warning

# RCS1191: Declare enum value as combination of names.
dotnet_diagnostic.RCS1191.severity = warning

# RCS1192: Unnecessary usage of verbatim string literal.
dotnet_diagnostic.RCS1192.severity = warning

# RCS1193: Overriding member should not change 'params' modifier.
dotnet_diagnostic.RCS1193.severity = warning

# RCS1194: Implement exception constructors.
dotnet_diagnostic.RCS1194.severity = warning

# RCS1195: Use ^ operator.
dotnet_diagnostic.RCS1195.severity = warning

# RCS1196: Call extension method as instance method.
dotnet_diagnostic.RCS1196.severity = warning

# RCS1197: Optimize StringBuilder.Append/AppendLine call.
dotnet_diagnostic.RCS1197.severity = warning

# RCS1198: Avoid unnecessary boxing of value type.
dotnet_diagnostic.RCS1198.severity = warning

# RCS1199: Unncessary null check.
dotnet_diagnostic.RCS1199.severity = warning

# RCS1200: Call 'Enumerable.ThenBy' instead of 'Enumerable.OrderBy'.
dotnet_diagnostic.RCS1200.severity = warning

# RCS1201: Use method chaining.
dotnet_diagnostic.RCS1201.severity = warning

# RCS1202: Avoid NullReferenceException.
dotnet_diagnostic.RCS1202.severity = warning

# RCS1203: Use AttributeUsageAttribute.
dotnet_diagnostic.RCS1203.severity = warning

# RCS1204: Use EventArgs.Empty.
dotnet_diagnostic.RCS1204.severity = warning

# RCS1205: Order named arguments according to the order of parameters.
dotnet_diagnostic.RCS1205.severity = warning

# RCS1206: Use conditional access instead of conditional expression.
dotnet_diagnostic.RCS1206.severity = warning

# RCS1207: Convert anonymous function to method group (or vice versa).
dotnet_diagnostic.RCS1207.severity = warning

# RCS1207i: Convert method group to anonymous function.
dotnet_diagnostic.RCS1207i.severity = warning

# RCS1208: Reduce 'if' nesting.
dotnet_diagnostic.RCS1208.severity = none

# RCS1209: Order type parameter constraints.
dotnet_diagnostic.RCS1209.severity = warning

# RCS1210: Return completed task instead of returning null.
dotnet_diagnostic.RCS1210.severity = warning

# RCS1211: Remove unnecessary 'else'.
dotnet_diagnostic.RCS1211.severity = warning

# RCS1212: Remove redundant assignment.
dotnet_diagnostic.RCS1212.severity = warning

# RCS1213: Remove unused member declaration.
dotnet_diagnostic.RCS1213.severity = warning

# RCS1214: Unnecessary interpolated string.
dotnet_diagnostic.RCS1214.severity = warning

# RCS1215: Expression is always equal to true/false.
dotnet_diagnostic.RCS1215.severity = warning

# RCS1216: Unnecessary unsafe context.
dotnet_diagnostic.RCS1216.severity = warning

# RCS1217: Convert interpolated string to concatenation.
dotnet_diagnostic.RCS1217.severity = warning

# RCS1218: Simplify code branching.
dotnet_diagnostic.RCS1218.severity = warning

# RCS1220: Use pattern matching instead of combination of 'is' operator and cast operator.
dotnet_diagnostic.RCS1220.severity = warning

# RCS1221: Use pattern matching instead of combination of 'as' operator and null check.
dotnet_diagnostic.RCS1221.severity = warning

# RCS1222: Merge preprocessor directives.
dotnet_diagnostic.RCS1222.severity = warning

# RCS1223: Mark publicly visible type with DebuggerDisplay attribute.
dotnet_diagnostic.RCS1223.severity = none

# RCS1224: Make method an extension method.
dotnet_diagnostic.RCS1224.severity = warning

# RCS1225: Make class sealed.
dotnet_diagnostic.RCS1225.severity = warning

# RCS1226: Add paragraph to documentation comment.
dotnet_diagnostic.RCS1226.severity = warning

# RCS1227: Validate arguments correctly.
dotnet_diagnostic.RCS1227.severity = warning

# RCS1228: Unused element in documentation comment.
dotnet_diagnostic.RCS1228.severity = warning

# RCS1229: Use async/await when necessary.
dotnet_diagnostic.RCS1229.severity = warning

# RCS1230: Unnecessary explicit use of enumerator.
dotnet_diagnostic.RCS1230.severity = warning

# RCS1231: Make parameter ref read-only.
dotnet_diagnostic.RCS1231.severity = none

# RCS1232: Order elements in documentation comment.
dotnet_diagnostic.RCS1232.severity = warning

# RCS1233: Use short-circuiting operator.
dotnet_diagnostic.RCS1233.severity = warning

# RCS1234: Duplicate enum value.
dotnet_diagnostic.RCS1234.severity = warning

# RCS1235: Optimize method call.
dotnet_diagnostic.RCS1235.severity = warning

# RCS1236: Use exception filter.
dotnet_diagnostic.RCS1236.severity = warning

# RCS1237: Use bit shift operator.
dotnet_diagnostic.RCS1237.severity = warning

# RCS1238: Avoid nested ?: operators.
dotnet_diagnostic.RCS1238.severity = none

# RCS1239: Use 'for' statement instead of 'while' statement.
dotnet_diagnostic.RCS1239.severity = warning

# RCS1240: Operator is unnecessary.
dotnet_diagnostic.RCS1240.severity = warning

# RCS1241: Implement non-generic counterpart.
dotnet_diagnostic.RCS1241.severity = warning

# RCS1242: Do not pass non-read-only struct by read-only reference.
dotnet_diagnostic.RCS1242.severity = warning

# RCS1243: Duplicate word in a comment.
dotnet_diagnostic.RCS1243.severity = warning

# RCS1244: Simplify 'default' expression.
dotnet_diagnostic.RCS1244.severity = warning

# RCS1246: Use element access.
dotnet_diagnostic.RCS1246.severity = warning

# RCS1246a: Do not use element access when expression is invocation.
dotnet_diagnostic.RCS1246a.severity = warning

# RCS1247: Fix documentation comment tag.
dotnet_diagnostic.RCS1247.severity = warning

# RCS1248: Use 'is null' pattern instead of comparison (or vice versa).
dotnet_diagnostic.RCS1248.severity = warning

# RCS1248a: Use 'is null' pattern instead of '!=' operator.
dotnet_diagnostic.RCS1248a.severity = warning

# RCS1248i: Use comparison instead of 'is null' pattern.
dotnet_diagnostic.RCS1248i.severity = warning

# RCS0001: Add empty line after embedded statement.
dotnet_diagnostic.RCS0001.severity = warning

# RCS0002: Add empty line after #region.
dotnet_diagnostic.RCS0002.severity = warning

# RCS0003: Add empty line after using directive list.
dotnet_diagnostic.RCS0003.severity = warning

# RCS0004: Add empty line before closing brace of 'do' statement.
dotnet_diagnostic.RCS0004.severity = warning

# RCS0005: Add empty line before #endregion.
dotnet_diagnostic.RCS0005.severity = warning

# RCS0006: Add empty line before using directive list.
dotnet_diagnostic.RCS0006.severity = warning

# RCS0007: Add empty line between accessors.
dotnet_diagnostic.RCS0007.severity = warning

# RCS0008: Add empty line between block and statement.
dotnet_diagnostic.RCS0008.severity = warning

# RCS0009: Add empty line between declaration and documentation comment.
dotnet_diagnostic.RCS0009.severity = warning

# RCS0010: Add empty line between declarations.
dotnet_diagnostic.RCS0010.severity = warning

# RCS0011: Add empty line between single-line accessors (or vice versa).
dotnet_diagnostic.RCS0011.severity = warning

# RCS0011i: Remove empty line between single-line accessors.
dotnet_diagnostic.RCS0011i.severity = warning

# RCS0012: Add empty line between single-line declarations.
dotnet_diagnostic.RCS0012.severity = warning

# RCS0013: Add empty line between single-line declarations of different kind.
dotnet_diagnostic.RCS0013.severity = warning

# RCS0014: Add empty line between switch sections.
dotnet_diagnostic.RCS0014.severity = warning

# RCS0015: Add empty line between using directives with different root namespace (or vice versa).
dotnet_diagnostic.RCS0015.severity = warning

# RCS0015i: Remove empty line between using directives with different root namespace.
dotnet_diagnostic.RCS0015i.severity = warning

# RCS0016: Add newline after attribute list.
dotnet_diagnostic.RCS0016.severity = warning

# RCS0020: Add newline after opening brace of accessor.
dotnet_diagnostic.RCS0020.severity = warning

# RCS0021: Add newline after opening brace of block.
dotnet_diagnostic.RCS0021.severity = warning

# RCS0022: Add newline after opening brace of empty block.
dotnet_diagnostic.RCS0022.severity = warning

# RCS0023: Add newline after opening brace of type declaration.
dotnet_diagnostic.RCS0023.severity = warning

# RCS0024: Add newline after switch label.
dotnet_diagnostic.RCS0024.severity = warning

# RCS0025: Add newline before accessor of full property.
dotnet_diagnostic.RCS0025.severity = warning

# RCS0027: Add newline before binary operator instead of after it (or vice versa).
dotnet_diagnostic.RCS0027.severity = warning

# RCS0027i: Add newline after binary operator instead of before it.
dotnet_diagnostic.RCS0027i.severity = warning

# RCS0028: Add newline before conditional operator instead of after it (or vice versa).
dotnet_diagnostic.RCS0028.severity = warning

# RCS0028i: Add newline after conditional operator instead of before it.
dotnet_diagnostic.RCS0028i.severity = warning

# RCS0029: Add newline before constructor initializer.
dotnet_diagnostic.RCS0029.severity = warning

# RCS0030: Add newline before embedded statement.
dotnet_diagnostic.RCS0030.severity = warning

# RCS0031: Add newline before enum member.
dotnet_diagnostic.RCS0031.severity = warning

# RCS0032: Add newline before expression-body arrow instead of after it (or vice versa).
dotnet_diagnostic.RCS0032.severity = warning

# RCS0032i: Add newline after expression-body arrow instead of before it.
dotnet_diagnostic.RCS0032i.severity = warning

# RCS0033: Add newline before statement.
dotnet_diagnostic.RCS0033.severity = warning

# RCS0034: Add newline before type parameter constraint.
dotnet_diagnostic.RCS0034.severity = warning

# RCS0036: Remove empty line between single-line declarations of same kind.
dotnet_diagnostic.RCS0036.severity = warning

# RCS0038: Remove empty line between using directives with same root namespace.
dotnet_diagnostic.RCS0038.severity = warning

# RCS0039: Remove newline before base list.
dotnet_diagnostic.RCS0039.severity = warning

# RCS0041: Remove newline between 'if' keyword and 'else' keyword.
dotnet_diagnostic.RCS0041.severity = warning

# RCS0042: Remove newlines from accessor list of auto-property.
dotnet_diagnostic.RCS0042.severity = warning

# RCS0043: Remove newlines from accessor with single-line expression.
dotnet_diagnostic.RCS0043.severity = warning

# RCS0044: Use carriage return + linefeed as newline.
dotnet_diagnostic.RCS0044.severity = none

# RCS0045: Use linefeed as newline.
dotnet_diagnostic.RCS0045.severity = none

# RCS0046: Use spaces instead of tab.
dotnet_diagnostic.RCS0046.severity = warning

# RCS0047: [deprecated] Wrap and indent each node in list.
dotnet_diagnostic.RCS0047.severity = warning

# RCS0048: Remove newlines from initializer with single-line expression.
dotnet_diagnostic.RCS0048.severity = warning

# RCS0049: Add empty line after top comment.
dotnet_diagnostic.RCS0049.severity = warning

# RCS0050: Add empty line before top declaration.
dotnet_diagnostic.RCS0050.severity = warning

# RCS0051: Add newline between closing brace and 'while' keyword (or vice versa).
dotnet_diagnostic.RCS0051.severity = warning

# RCS0051i: Remove newline between closing brace and 'while' keyword.
dotnet_diagnostic.RCS0051i.severity = warning

# RCS0052: Add newline before equals sign instead of after it (or vice versa).
dotnet_diagnostic.RCS0052.severity = warning

# RCS0052i: Add newline after equals sign instead of before it.
dotnet_diagnostic.RCS0052i.severity = warning

# RCS0053: Fix formatting of a list.
dotnet_diagnostic.RCS0053.severity = warning

# RCS0054: Fix formatting of a call chain.
dotnet_diagnostic.RCS0054.severity = warning

# RCS0055: Fix formatting of a binary expression chain.
dotnet_diagnostic.RCS0055.severity = warning

# RCS0056: A line is too long.
dotnet_diagnostic.RCS0056.severity = warning

# S100: Methods and properties should be named in PascalCase
dotnet_diagnostic.S100.severity = warning

# S1006: Method overrides should not change parameter defaults
dotnet_diagnostic.S1006.severity = warning

# S101: Types should be named in PascalCase
dotnet_diagnostic.S101.severity = warning

# S103: Lines should not be too long
dotnet_diagnostic.S103.severity = warning

# S104: Files should not have too many lines of code
dotnet_diagnostic.S104.severity = warning

# S1048: Destructors should not throw exceptions
dotnet_diagnostic.S1048.severity = warning

# S105: Tabulation characters should not be used
dotnet_diagnostic.S105.severity = warning

# S106: Standard outputs should not be used directly to log anything
dotnet_diagnostic.S106.severity = warning

# S1066: Collapsible "if" statements should be merged
dotnet_diagnostic.S1066.severity = warning

# S1067: Expressions should not be too complex
dotnet_diagnostic.S1067.severity = warning

# S107: Methods should not have too many parameters
dotnet_diagnostic.S107.severity = warning

# S1075: URIs should not be hardcoded
dotnet_diagnostic.S1075.severity = warning

# S108: Nested blocks of code should not be left empty
dotnet_diagnostic.S108.severity = warning

# S109: Magic numbers should not be used
dotnet_diagnostic.S109.severity = warning

# S110: Inheritance tree of classes should not be too deep
dotnet_diagnostic.S110.severity = warning

# S1104: Fields should not have public accessibility
dotnet_diagnostic.S1104.severity = warning

# S1109: A close curly brace should be located at the beginning of a line
dotnet_diagnostic.S1109.severity = warning

# S1110: Redundant pairs of parentheses should be removed
dotnet_diagnostic.S1110.severity = warning

# S1116: Empty statements should be removed
dotnet_diagnostic.S1116.severity = warning

# S1117: Local variables should not shadow class fields
dotnet_diagnostic.S1117.severity = warning

# S1118: Utility classes should not have public constructors
dotnet_diagnostic.S1118.severity = warning

# S112: General exceptions should never be thrown
dotnet_diagnostic.S112.severity = warning

# S1121: Assignments should not be made from within sub-expressions
dotnet_diagnostic.S1121.severity = warning

# S1123: "Obsolete" attributes should include explanations
dotnet_diagnostic.S1123.severity = warning

# S1125: Boolean literals should not be redundant
dotnet_diagnostic.S1125.severity = warning

# S1128: Unused "using" should be removed
dotnet_diagnostic.S1128.severity = warning

# S113: Files should contain an empty newline at the end
dotnet_diagnostic.S113.severity = warning

# S1134: Track uses of "FIXME" tags
dotnet_diagnostic.S1134.severity = warning

# S1135: Track uses of "TODO" tags
dotnet_diagnostic.S1135.severity = warning

# S1144: Unused private types or members should be removed
dotnet_diagnostic.S1144.severity = warning

# S1145: Useless "if(true) {...}" and "if(false){...}" blocks should be removed
dotnet_diagnostic.S1145.severity = warning

# S1147: Exit methods should not be called
dotnet_diagnostic.S1147.severity = warning

# S1151: "switch case" clauses should not have too many lines of code
dotnet_diagnostic.S1151.severity = warning

# S1155: "Any()" should be used to test for emptiness
dotnet_diagnostic.S1155.severity = warning

# S1163: Exceptions should not be thrown in finally blocks
dotnet_diagnostic.S1163.severity = warning

# S1168: Empty arrays and collections should be returned instead of null
dotnet_diagnostic.S1168.severity = warning

# S1172: Unused method parameters should be removed
dotnet_diagnostic.S1172.severity = warning

# S1185: Overriding members should do more than simply call the same member in the base class
dotnet_diagnostic.S1185.severity = warning

# S1186: Methods should not be empty
dotnet_diagnostic.S1186.severity = warning

# S1192: String literals should not be duplicated
dotnet_diagnostic.S1192.severity = warning

# S1199: Nested code blocks should not be used
dotnet_diagnostic.S1199.severity = warning

# S1200: Classes should not be coupled to too many other classes (Single Responsibility Principle)
dotnet_diagnostic.S1200.severity = warning

# S1206: "Equals(Object)" and "GetHashCode()" should be overridden in pairs
dotnet_diagnostic.S1206.severity = warning

# S121: Control structures should use curly braces
dotnet_diagnostic.S121.severity = warning

# S1210: "Equals" and the comparison operators should be overridden when implementing "IComparable"
dotnet_diagnostic.S1210.severity = warning

# S1215: "GC.Collect" should not be called
dotnet_diagnostic.S1215.severity = warning

# S122: Statements should be on separate lines
dotnet_diagnostic.S122.severity = warning

# S1226: Method parameters, caught exceptions and foreach variables' initial values should not be ignored
dotnet_diagnostic.S1226.severity = warning

# S1227: break statements should not be used except for switch cases
dotnet_diagnostic.S1227.severity = warning

# S1244: Floating point numbers should not be tested for equality
dotnet_diagnostic.S1244.severity = warning

# S125: Sections of code should not be commented out
dotnet_diagnostic.S125.severity = warning

# S126: "if ... else if" constructs should end with "else" clauses
dotnet_diagnostic.S126.severity = warning

# S1264: A "while" loop should be used instead of a "for" loop
dotnet_diagnostic.S1264.severity = warning

# S127: "for" loop stop conditions should be invariant
dotnet_diagnostic.S127.severity = warning

# S1301: "switch" statements should have at least 3 "case" clauses
dotnet_diagnostic.S1301.severity = warning

# S1309: Track uses of in-source issue suppressions
dotnet_diagnostic.S1309.severity = suggestion

# S131: "switch/Select" statements should contain a "default/Case Else" clauses
dotnet_diagnostic.S131.severity = warning

# S134: Control flow statements "if", "switch", "for", "foreach", "while", "do"  and "try" should not be nested too deeply
dotnet_diagnostic.S134.severity = warning

# S138: Functions should not have too many lines of code
dotnet_diagnostic.S138.severity = warning

# S1449: Culture should be specified for "string" operations
dotnet_diagnostic.S1449.severity = warning

# S1450: Private fields only used as local variables in methods should become local variables
dotnet_diagnostic.S1450.severity = warning

# S1451: Track lack of copyright and license headers
dotnet_diagnostic.S1451.severity = none

# S1479: "switch" statements should not have too many "case" clauses
dotnet_diagnostic.S1479.severity = warning

# S1481: Unused local variables should be removed
dotnet_diagnostic.S1481.severity = warning

# S1541: Methods and properties should not be too complex
dotnet_diagnostic.S1541.severity = warning

# S1607: Tests should not be ignored
dotnet_diagnostic.S1607.severity = warning

# S1643: Strings should not be concatenated using '+' in a loop
dotnet_diagnostic.S1643.severity = warning

# S1656: Variables should not be self-assigned
dotnet_diagnostic.S1656.severity = warning

# S1659: Multiple variables should not be declared on the same line
dotnet_diagnostic.S1659.severity = warning

# S1694: An abstract class should have both abstract and concrete methods
dotnet_diagnostic.S1694.severity = warning

# S1696: NullReferenceException should not be caught
dotnet_diagnostic.S1696.severity = warning

# S1697: Short-circuit logic should be used to prevent null pointer dereferences in conditionals
dotnet_diagnostic.S1697.severity = warning

# S1698: "==" should not be used when "Equals" is overridden
dotnet_diagnostic.S1698.severity = warning

# S1699: Constructors should only call non-overridable methods
dotnet_diagnostic.S1699.severity = warning

# S1751: Loops with at most one iteration should be refactored
dotnet_diagnostic.S1751.severity = warning

# S1764: Identical expressions should not be used on both sides of a binary operator
dotnet_diagnostic.S1764.severity = warning

# S1821: "switch" statements should not be nested
dotnet_diagnostic.S1821.severity = warning

# S1848: Objects should not be created to be dropped immediately without being used
dotnet_diagnostic.S1848.severity = warning

# S1854: Unused assignments should be removed
dotnet_diagnostic.S1854.severity = warning

# S1858: "ToString()" calls should not be redundant
dotnet_diagnostic.S1858.severity = warning

# S1862: Related "if/else if" statements should not have the same condition
dotnet_diagnostic.S1862.severity = warning

# S1871: Two branches in a conditional structure should not have exactly the same implementation
dotnet_diagnostic.S1871.severity = warning

# S1905: Redundant casts should not be used
dotnet_diagnostic.S1905.severity = warning

# S1939: Inheritance list should not be redundant
dotnet_diagnostic.S1939.severity = warning

# S1940: Boolean checks should not be inverted
dotnet_diagnostic.S1940.severity = warning

# S1944: Inappropriate casts should not be made
dotnet_diagnostic.S1944.severity = warning

# S1994: "for" loop increment clauses should modify the loops' counters
dotnet_diagnostic.S1994.severity = warning

# S2053: Hashes should include an unpredictable salt
dotnet_diagnostic.S2053.severity = warning

# S2070: SHA-1 and Message-Digest hash algorithms should not be used in secure contexts
dotnet_diagnostic.S2070.severity = warning

# S2114: Collections should not be passed as arguments to their own methods
dotnet_diagnostic.S2114.severity = warning

# S2115: A secure password should be used when connecting to a database
dotnet_diagnostic.S2115.severity = warning

# S2123: Values should not be uselessly incremented
dotnet_diagnostic.S2123.severity = warning

# S2148: Underscores should be used to make large numbers readable
dotnet_diagnostic.S2148.severity = warning

# S2156: "sealed" classes should not have "protected" members
dotnet_diagnostic.S2156.severity = warning

# S2178: Short-circuit logic should be used in boolean contexts
dotnet_diagnostic.S2178.severity = warning

# S2183: Integral numbers should not be shifted by zero or more than their number of bits-1
dotnet_diagnostic.S2183.severity = warning

# S2184: Results of integer division should not be assigned to floating point variables
dotnet_diagnostic.S2184.severity = warning

# S2187: TestCases should contain tests
dotnet_diagnostic.S2187.severity = warning

# S2190: Recursion should not be infinite
dotnet_diagnostic.S2190.severity = warning

# S2197: Modulus results should not be checked for direct equality
dotnet_diagnostic.S2197.severity = warning

# S2201: Return values from functions without side effects should not be ignored
dotnet_diagnostic.S2201.severity = warning

# S2219: Runtime type checking should be simplified
dotnet_diagnostic.S2219.severity = warning

# S2221: "Exception" should not be caught when not required by called methods
dotnet_diagnostic.S2221.severity = none

# S2228: Console logging should not be used
dotnet_diagnostic.S2228.severity = warning

# S2278: Neither DES (Data Encryption Standard) nor DESede (3DES) should be used
dotnet_diagnostic.S2278.severity = warning

# S2302: "nameof" should be used
dotnet_diagnostic.S2302.severity = warning

# S2325: Methods and properties that don't access instance data should be static
dotnet_diagnostic.S2325.severity = warning

# S2327: "try" statements with identical "catch" and/or "finally" blocks should be merged
dotnet_diagnostic.S2327.severity = warning

# S2330: Array covariance should not be used
dotnet_diagnostic.S2330.severity = warning

# S2339: Public constant members should not be used
dotnet_diagnostic.S2339.severity = warning

# S2333: Redundant modifiers should not be used
dotnet_diagnostic.S2333.severity = warning

# S2342: Enumeration types should comply with a naming convention
dotnet_diagnostic.S2342.severity = warning

# S2357: Fields should be private
dotnet_diagnostic.S2357.severity = warning

# S2360: Optional parameters should not be used
dotnet_diagnostic.S2360.severity = warning

# S2387: Child class fields should not shadow parent class fields
dotnet_diagnostic.S2387.severity = warning

# S2436: Types and methods should not have too many generic parameters
dotnet_diagnostic.S2436.severity = warning

# S2437: Silly bit operations should not be performed
dotnet_diagnostic.S2437.severity = warning

# S2674: The length returned from a stream read should be checked
dotnet_diagnostic.S2674.severity = warning

# S2701: Literal boolean values should not be used in assertions
dotnet_diagnostic.S2701.severity = warning

# S2737: "catch" clauses should do more than rethrow
dotnet_diagnostic.S2737.severity = warning

# S2743: Static fields should not be used in generic types
dotnet_diagnostic.S2743.severity = warning

# S2755: XML parsers should not be vulnerable to XXE attacks
dotnet_diagnostic.S2755.severity = warning

# S2757: "=+" should not be used instead of "+="
dotnet_diagnostic.S2757.severity = warning

# S2758: The ternary operator should not return the same value regardless of the condition
dotnet_diagnostic.S2758.severity = warning

# S2760: Sequential tests should not check the same condition
dotnet_diagnostic.S2760.severity = warning

# S2761: Doubled prefix operators "!!" and "~~" should not be used
dotnet_diagnostic.S2761.severity = warning

# S2857: SQL keywords should be delimited by whitespace
dotnet_diagnostic.S2857.severity = warning

# S2930: "IDisposables" should be disposed
dotnet_diagnostic.S2930.severity = warning

# S2931: Classes with "IDisposable" members should implement "IDisposable"
dotnet_diagnostic.S2931.severity = warning

# S2933: Fields that are only assigned in the constructor should be "readonly"
dotnet_diagnostic.S2933.severity = warning

# S2934: Property assignments should not be made for "readonly" fields not constrained to reference types
dotnet_diagnostic.S2934.severity = warning

# S2952: Classes should "Dispose" of members from the classes' own "Dispose" methods
dotnet_diagnostic.S2952.severity = warning

# S2953: Methods named "Dispose" should implement "IDisposable.Dispose"
dotnet_diagnostic.S2953.severity = warning

# S2955: Generic parameters not constrained to reference types should not be compared to "null"
dotnet_diagnostic.S2955.severity = warning

# S2971: "IEnumerable" LINQs should be simplified
dotnet_diagnostic.S2971.severity = warning

# S2995: "Object.ReferenceEquals" should not be used for value types
dotnet_diagnostic.S2995.severity = warning

# S2996: "ThreadStatic" fields should not be initialized
dotnet_diagnostic.S2996.severity = warning

# S2997: "IDisposables" created in a "using" statement should not be returned
dotnet_diagnostic.S2997.severity = warning

# S3005: "ThreadStatic" should not be used on non-static fields
dotnet_diagnostic.S3005.severity = warning

# S3010: Static fields should not be updated in constructors
dotnet_diagnostic.S3010.severity = warning

# S3011: Reflection should not be used to increase accessibility of classes, methods, or fields
dotnet_diagnostic.S3011.severity = warning

# S3052: Members should not be initialized to default values
dotnet_diagnostic.S3052.severity = warning

# S3060: "is" should not be used with "this"
dotnet_diagnostic.S3060.severity = warning

# S3168: "async" methods should not return "void"
dotnet_diagnostic.S3168.severity = warning

# S3169: Multiple "OrderBy" calls should not be used
dotnet_diagnostic.S3169.severity = warning

# S3172: Delegates should not be subtracted
dotnet_diagnostic.S3172.severity = warning

# S3215: "interface" instances should not be cast to concrete types
dotnet_diagnostic.S3215.severity = warning

# S3216: "ConfigureAwait(false)" should be used
dotnet_diagnostic.S3216.severity = warning

# S3217: "Explicit" conversions of "foreach" loops should not be used
dotnet_diagnostic.S3217.severity = warning

# S3218: Inner class members should not shadow outer class "static" or type members
dotnet_diagnostic.S3218.severity = warning

# S3220: Method calls should not resolve ambiguously to overloads with "params"
dotnet_diagnostic.S3220.severity = warning

# S3234: "GC.SuppressFinalize" should not be invoked for types without destructors
dotnet_diagnostic.S3234.severity = warning

# S3235: Redundant parentheses should not be used
dotnet_diagnostic.S3235.severity = warning

# S3236: Caller information arguments should not be provided explicitly
dotnet_diagnostic.S3236.severity = warning

# S3237: "value" parameters should be used
dotnet_diagnostic.S3237.severity = warning

# S3240: The simplest possible condition syntax should be used
dotnet_diagnostic.S3240.severity = warning

# S3241: Methods should not return values that are never used
dotnet_diagnostic.S3241.severity = warning

# S3242: Method parameters should be declared with base types
dotnet_diagnostic.S3242.severity = warning

# S3244: Anonymous delegates should not be used to unsubscribe from Events
dotnet_diagnostic.S3244.severity = warning

# S3246: Generic type parameters should be co/contravariant when possible
dotnet_diagnostic.S3246.severity = warning

# S3247: Duplicate casts should not be made
dotnet_diagnostic.S3247.severity = warning

# S3249: Classes directly extending "object" should not call "base" in "GetHashCode" or "Equals"
dotnet_diagnostic.S3249.severity = warning

# S3251: Implementations should be provided for "partial" methods
dotnet_diagnostic.S3251.severity = warning

# S3253: Constructor and destructor declarations should not be redundant
dotnet_diagnostic.S3253.severity = warning

# S3254: Default parameter values should not be passed as arguments
dotnet_diagnostic.S3254.severity = warning

# S3256: "string.IsNullOrEmpty" should be used
dotnet_diagnostic.S3256.severity = warning

# S3257: Declarations and initializations should be as concise as possible
dotnet_diagnostic.S3257.severity = warning

# S3261: Namespaces should not be empty
dotnet_diagnostic.S3261.severity = warning

# S3353: Unchanged local variables should be "const"
dotnet_diagnostic.S3353.severity = warning

# S3358: Ternary operators should not be nested
dotnet_diagnostic.S3358.severity = none

# S3366: "this" should not be exposed from constructors
dotnet_diagnostic.S3366.severity = warning

# S3376: Attribute, EventArgs, and Exception type names should end with the type being extended
dotnet_diagnostic.S3376.severity = warning

# S3397: "base.Equals" should not be used to check for reference equality in "Equals" if "base" is not "object"
dotnet_diagnostic.S3397.severity = warning

# S3400: Methods should not return constants
dotnet_diagnostic.S3400.severity = warning

# S3415: Assertion arguments should be passed in the correct order
dotnet_diagnostic.S3415.severity = warning

# S3427: Method overloads with default parameter values should not overlap 
dotnet_diagnostic.S3427.severity = warning

# S3431: "[ExpectedException]" should not be used
dotnet_diagnostic.S3431.severity = warning

# S3433: Test method signatures should be correct
dotnet_diagnostic.S3433.severity = warning

# S3440: Variables should not be checked against the values they're about to be assigned
dotnet_diagnostic.S3440.severity = warning

# S3441: Redundant property names should be omitted in anonymous classes
dotnet_diagnostic.S3441.severity = warning

# S3442: "abstract" classes should not have "public" constructors
dotnet_diagnostic.S3442.severity = warning

# S3443: Type should not be examined on "System.Type" instances
dotnet_diagnostic.S3443.severity = warning

# S3532: Empty "default" clauses should be removed
dotnet_diagnostic.S3532.severity = warning

# S3597: "ServiceContract" and "OperationContract" attributes should be used together
dotnet_diagnostic.S3597.severity = warning

# S3598: One-way "OperationContract" methods should have "void" return type
dotnet_diagnostic.S3598.severity = warning

# S3600: "params" should not be introduced on overrides
dotnet_diagnostic.S3600.severity = warning

# S3603: Methods with "Pure" attribute should return a value 
dotnet_diagnostic.S3603.severity = warning

# S3604: Member initializer values should not be redundant
dotnet_diagnostic.S3604.severity = warning

# S3610: Nullable type comparison should not be redundant
dotnet_diagnostic.S3610.severity = warning

# S3626: Jump statements should not be redundant
dotnet_diagnostic.S3626.severity = warning

# S3655: Empty nullable value should not be accessed
dotnet_diagnostic.S3655.severity = warning

# S3693: Exception constructors should not throw exceptions
dotnet_diagnostic.S3693.severity = warning

# S3717: Track use of "NotImplementedException"
dotnet_diagnostic.S3717.severity = warning

# S3776: Cognitive Complexity of methods should not be too high
dotnet_diagnostic.S3776.severity = warning

# S3869: "SafeHandle.DangerousGetHandle" should not be called
dotnet_diagnostic.S3869.severity = warning

# S3871: Exception types should be "public"
dotnet_diagnostic.S3871.severity = warning

# S3872: Parameter names should not duplicate the names of their methods
dotnet_diagnostic.S3872.severity = warning

# S3874: "out" and "ref" parameters should not be used
dotnet_diagnostic.S3874.severity = none

# S3876: Strings or integral types should be used for indexers
dotnet_diagnostic.S3876.severity = warning

# S3877: Exceptions should not be thrown from unexpected methods
dotnet_diagnostic.S3877.severity = warning

# S3880: Finalizers should not be empty
dotnet_diagnostic.S3880.severity = warning

# S3881: "IDisposable" should be implemented correctly
dotnet_diagnostic.S3881.severity = warning

# S3884: "CoSetProxyBlanket" and "CoInitializeSecurity" should not be used
dotnet_diagnostic.S3884.severity = warning

# S3885: "Assembly.Load" should be used
dotnet_diagnostic.S3885.severity = warning

# S3887: Mutable, non-private fields should not be "readonly"
dotnet_diagnostic.S3887.severity = warning

# S3889: Neither "Thread.Resume" nor "Thread.Suspend" should be used
dotnet_diagnostic.S3889.severity = warning

# S3897: Classes that provide "Equals(<T>)" should implement "IEquatable<T>"
dotnet_diagnostic.S3897.severity = warning

# S3898: Value types should implement "IEquatable<T>"
dotnet_diagnostic.S3898.severity = warning

# S3900: Arguments of public methods should be validated against null
dotnet_diagnostic.S3900.severity = warning

# S3902: "Assembly.GetExecutingAssembly" should not be called
dotnet_diagnostic.S3902.severity = warning

# S3903: Types should be defined in named namespaces
dotnet_diagnostic.S3903.severity = warning

# S3904: Assemblies should have version information
dotnet_diagnostic.S3904.severity = warning

# S3906: Event Handlers should have the correct signature
dotnet_diagnostic.S3906.severity = warning

# S3908: Generic event handlers should be used
dotnet_diagnostic.S3908.severity = warning

# S3909: Collections should implement the generic interface
dotnet_diagnostic.S3909.severity = warning

# S3923: All branches in a conditional structure should not have exactly the same implementation
dotnet_diagnostic.S3923.severity = warning

# S3925: "ISerializable" should be implemented correctly
dotnet_diagnostic.S3925.severity = warning

# S3926: Deserialization methods should be provided for "OptionalField" members
dotnet_diagnostic.S3926.severity = warning

# S3927: Serialization event handlers should be implemented correctly
dotnet_diagnostic.S3927.severity = warning

# S3928: Parameter names used into ArgumentException constructors should match an existing one 
dotnet_diagnostic.S3928.severity = warning

# S3937: Number patterns should be regular
dotnet_diagnostic.S3937.severity = warning

# S3949: Calculations should not overflow
dotnet_diagnostic.S3949.severity = warning

# S3956: "Generic.List" instances should not be part of public APIs
dotnet_diagnostic.S3956.severity = warning

# S3962: "static readonly" constants should be "const" instead
dotnet_diagnostic.S3962.severity = warning

# S3963: "static" fields should be initialized inline
dotnet_diagnostic.S3963.severity = warning

# S3966: Objects should not be disposed more than once
dotnet_diagnostic.S3966.severity = warning

# S3967: Multidimensional arrays should not be used
dotnet_diagnostic.S3967.severity = warning

# S3971: "GC.SuppressFinalize" should not be called
dotnet_diagnostic.S3971.severity = warning

# S3972: Conditionals should start on new lines
dotnet_diagnostic.S3972.severity = warning

# S3973: A conditionally executed single line should be denoted by indentation
dotnet_diagnostic.S3973.severity = warning

# S3981: Collection sizes and array length comparisons should make sense
dotnet_diagnostic.S3981.severity = warning

# S3984: Exceptions should not be created without being thrown
dotnet_diagnostic.S3984.severity = warning

# S3990: Assemblies should be marked as CLS compliant
dotnet_diagnostic.S3990.severity = warning

# S3992: Assemblies should explicitly specify COM visibility
dotnet_diagnostic.S3992.severity = warning

# S3993: Custom attributes should be marked with "System.AttributeUsageAttribute"
dotnet_diagnostic.S3993.severity = warning

# S3994: URI Parameters should not be strings
dotnet_diagnostic.S3994.severity = warning

# S3995: URI return values should not be strings
dotnet_diagnostic.S3995.severity = warning

# S3996: URI properties should not be strings
dotnet_diagnostic.S3996.severity = warning

# S3997: String URI overloads should call "System.Uri" overloads
dotnet_diagnostic.S3997.severity = warning

# S3998: Threads should not lock on objects with weak identity
dotnet_diagnostic.S3998.severity = warning

# S4000: Pointers to unmanaged memory should not be visible
dotnet_diagnostic.S4000.severity = warning

# S4002: Disposable types should declare finalizers
dotnet_diagnostic.S4002.severity = warning

# S4004: Collection properties should be readonly
dotnet_diagnostic.S4004.severity = warning

# S4005: "System.Uri" arguments should be used instead of strings
dotnet_diagnostic.S4005.severity = warning

# S4015: Inherited member visibility should not be decreased
dotnet_diagnostic.S4015.severity = warning

# S4016: Enumeration members should not be named "Reserved"
dotnet_diagnostic.S4016.severity = warning

# S4017: Method signatures should not contain nested generic types
dotnet_diagnostic.S4017.severity = none

# S4018: Generic methods should provide type parameters
dotnet_diagnostic.S4018.severity = none

# S4019: Base class methods should not be hidden
dotnet_diagnostic.S4019.severity = warning

# S4022: Enumerations should have "Int32" storage
dotnet_diagnostic.S4022.severity = warning

# S4023: Interfaces should not be empty
dotnet_diagnostic.S4023.severity = warning

# S4025: Child class fields should not differ from parent class fields only by capitalization
dotnet_diagnostic.S4025.severity = warning

# S4026: Assemblies should be marked with "NeutralResourcesLanguageAttribute"
dotnet_diagnostic.S4026.severity = warning

# S4027: Exceptions should provide standard constructors
dotnet_diagnostic.S4027.severity = warning

# S4039: Interface methods should be callable by derived types
dotnet_diagnostic.S4039.severity = warning

# S4040: Strings should be normalized to uppercase
dotnet_diagnostic.S4040.severity = warning

# S4041: Type names should not match namespaces
dotnet_diagnostic.S4041.severity = warning

# S4047: Generics should be used when appropriate
dotnet_diagnostic.S4047.severity = warning

# S4049: Properties should be preferred
dotnet_diagnostic.S4049.severity = none

# S4050: Operators should be overloaded consistently
dotnet_diagnostic.S4050.severity = warning

# S4052: Types should not extend outdated base types
dotnet_diagnostic.S4052.severity = warning

# S4055: Literals should not be passed as localized parameters
dotnet_diagnostic.S4055.severity = warning

# S4056: Overloads with a "CultureInfo" or an "IFormatProvider" parameter should be used
dotnet_diagnostic.S4056.severity = warning

# S4057: Locales should be set for data types
dotnet_diagnostic.S4057.severity = warning

# S4058: Overloads with a "StringComparison" parameter should be used
dotnet_diagnostic.S4058.severity = warning

# S4059: Property names should not match get methods
dotnet_diagnostic.S4059.severity = warning

# S4060: Non-abstract attributes should be sealed
dotnet_diagnostic.S4060.severity = warning

# S4061: "params" should be used instead of "varargs"
dotnet_diagnostic.S4061.severity = warning

# S4069: Operator overloads should have named alternatives
dotnet_diagnostic.S4069.severity = none

# S4142: Duplicate values should not be passed as arguments
dotnet_diagnostic.S4142.severity = warning

# S4143: Collection elements should not be replaced unconditionally
dotnet_diagnostic.S4143.severity = warning

# S4144: Methods should not have identical implementations
dotnet_diagnostic.S4144.severity = warning

# S4158: Empty collections should not be accessed or iterated
dotnet_diagnostic.S4158.severity = warning

# S4159: Classes should implement their "ExportAttribute" interfaces
dotnet_diagnostic.S4159.severity = warning

# S4200: Native methods should be wrapped
dotnet_diagnostic.S4200.severity = warning

# S4201: Null checks should not be used with "is"
dotnet_diagnostic.S4201.severity = warning

# S4210: Windows Forms entry points should be marked with STAThread
dotnet_diagnostic.S4210.severity = warning

# S4211: Members should not have conflicting transparency annotations
dotnet_diagnostic.S4211.severity = warning

# S4212: Serialization constructors should be secured
dotnet_diagnostic.S4212.severity = warning

# S4214: "P/Invoke" methods should not be visible
dotnet_diagnostic.S4214.severity = warning

# S4220: Events should have proper arguments
dotnet_diagnostic.S4220.severity = warning

# S4225: Extension methods should not extend "object"
dotnet_diagnostic.S4225.severity = warning

# S4226: Extensions should be in separate namespaces
dotnet_diagnostic.S4226.severity = none

# S4261: Methods should be named according to their synchronicities
dotnet_diagnostic.S4261.severity = warning

# S4432: AES encryption algorithm should be used with secured mode
dotnet_diagnostic.S4432.severity = warning

# S4462: Calls to "async" methods should not be blocking
dotnet_diagnostic.S4462.severity = warning

# S4487: Unread "private" fields should be removed
dotnet_diagnostic.S4487.severity = warning

# S4564: ASP.NET HTTP request validation feature should not be disabled
dotnet_diagnostic.S4564.severity = warning

# S881: Increment (++) and decrement (--) operators should not be used in a method call or mixed with other operators in an expression
dotnet_diagnostic.S881.severity = warning

# SX1309S: Static field names should begin with underscore
dotnet_diagnostic.SX1309S.severity = warning

# SX1309: Field names should begin with underscore
dotnet_diagnostic.SX1309.severity = none

# SX1101: Do not prefix local calls with 'this.'
dotnet_diagnostic.SX1101.severity = none

# SA1639: File header should have summary
dotnet_diagnostic.SA1639.severity = warning

# SA1609: Property documentation should have value
dotnet_diagnostic.SA1609.severity = none

# SA1412: Store files as UTF-8 with byte order mark
dotnet_diagnostic.SA1412.severity = none

# SA1305: Field names should not use Hungarian notation
dotnet_diagnostic.SA1305.severity = warning

# SA1000: Keywords should be spaced correctly
dotnet_diagnostic.SA1000.severity = none

# S3263: Static fields should appear in the order they must be initialized 
dotnet_diagnostic.S3263.severity = none

# SA1009: Closing parenthesis should be spaced correctly
dotnet_diagnostic.SA1009.severity = none
